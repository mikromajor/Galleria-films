{"version":3,"sources":["components/FilmsList/components/Film/Film.module.css","components/UI/CheckGenre/CheckGenre.module.css","components/FavoriteList/FavoriteList.module.css","components/UI/Loader/Loader.module.css","components/UI/Counter/Counter.module.css","components/FilmsList/FilmsList.module.css","components/UI/CheckGenre/CheckGenre.tsx","components/UI/Counter/Counter.tsx","components/UI/DropdownGenre/DropdownGenre.tsx","components/UI/DropdownSort/DropdownSort.tsx","components/UI/Loader/Loader.tsx","api/getFetch.ts","constants.ts","api/getMovies.ts","components/HeadMenu/handlers/handlerGenre.ts","components/HeadMenu/HeadMenu.tsx","components/FavoriteList/FavoriteList.tsx","components/FilmsList/components/Film/Film.tsx","components/FilmsList/hendlers/sorting.ts","components/FilmsList/FilmsList.tsx","components/App.tsx","index.tsx"],"names":["module","exports","CheckGenre","label","genreId","getGenre","useState","checked","setChecked","className","style","form","onClick","console","log","checkbox","type","readOnly","Counter","favoriteList","cl","counter","length","DropdownGenre","NavDropdown","id","title","menuVariant","DropdownSort","options","defaultName","setKeyWordSort","value","name","onChange","e","currentTarget","defaultValue","disabled","map","obj","val","Loader","loadText","loading","url","a","Error","fetch","response","status","ok","json","getFetch","BASE_IMG_URL","OPTIONS","getMovies","genres","setFilmsData","setIsLoading","join","then","results","catch","handlerGenre","setGenres","valGenre","some","genre","filter","HeadMenu","keyWordSort","setShowFavoriteList","showFavoriteList","Navbar","variant","bg","expand","fixed","Brand","Toggle","Collapse","Nav","Item","Link","href","Button","ToggleButton","FavoriteList","setFavoriteList","c","no_films","Row","marginTop","justifyContent","paddingTop","backgroundColor","cardData","Card","width","card_marg","Img","src","poster_path","Body","Title","Subtitle","vote_average","vote_count","release_date","Text","overview","card_btn_delFilm","f","Film","film","isInFavorites","addToFavoriteList","deleteFromFavoriteList","isExpanded","setIsExpanded","styles","filmCard","filmCard__expanded","cardBody","cardButtonsRow","prevState","CloseButton","card_btn_remove","border","sorting","filmsList","setFilmsList","every","sort","b","CardsFilms","filmsData","isLoading","useEffect","useCallback","o","currentFilm","center","App","FilmsList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52bfe4aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardBody\":\"Film_cardBody__3Qgt5\",\"filmCard\":\"Film_filmCard__20yJc\",\"filmCard__expanded\":\"Film_filmCard__expanded__1k41o\",\"cardButtonsRow\":\"Film_cardButtonsRow__32fFr\",\"card_btn_remove\":\"Film_card_btn_remove__VlRQq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CheckGenre_form__2YWvi\",\"checked\":\"CheckGenre_checked__Eo2yn\",\"checkbox\":\"CheckGenre_checkbox__Xu8Tp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card_marg\":\"FavoriteList_card_marg__3o1LT\",\"no_films\":\"FavoriteList_no_films__2KHSp\",\"card_btn_delFilm\":\"FavoriteList_card_btn_delFilm__2LULz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadText\":\"Loader_loadText__3dRbg\",\"loading\":\"Loader_loading__3fl-5\",\"rotate\":\"Loader_rotate__1rFJg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__iyJHm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"FilmsList_center__2d5r_\",\"hidden\":\"FilmsList_hidden__bVKK1\"};","import { useState } from \"react\";\r\nimport style from \"./CheckGenre.module.css\";\r\n\r\nconst CheckGenre = ({\r\n  label,\r\n  genreId,\r\n  getGenre,\r\n}: {\r\n  label: string;\r\n  genreId: string;\r\n  getGenre: (a: string, b: boolean) => void;\r\n}) => {\r\n  const [checked, setChecked] = useState(false);\r\n  return (\r\n    <form\r\n      className={\r\n        checked\r\n          ? `${style.form} ${style.checked}`\r\n          : style.form\r\n      }\r\n      onClick={() => {\r\n        console.log(\"checked\", checked);\r\n        getGenre(genreId, !checked);\r\n        setChecked(!checked);\r\n      }}\r\n    >\r\n      <input\r\n        className={style.checkbox}\r\n        type='checkbox'\r\n        checked={checked}\r\n        readOnly\r\n      />\r\n\r\n      {label}\r\n    </form>\r\n  );\r\n};\r\nexport default CheckGenre;\r\n","import { ARR } from \"../../../constants\";\r\nimport cl from \"./Counter.module.css\";\r\n\r\nconst Counter = ({\r\n  favoriteList,\r\n}: {\r\n  favoriteList: [] | ARR;\r\n}) => {\r\n  return (\r\n    <div className={cl.counter}>{favoriteList.length}</div>\r\n  );\r\n};\r\nexport default Counter;\r\n","import { NavDropdown } from \"react-bootstrap\";\r\nimport CheckGenre from \"../CheckGenre/CheckGenre\";\r\n\r\nconst DropdownGenre = ({\r\n  getGenre,\r\n}: {\r\n  getGenre: (v: string, c: boolean) => void;\r\n}) => {\r\n  return (\r\n    <NavDropdown\r\n      id='nav-dropdown-dark-example'\r\n      title='Choose genre'\r\n      menuVariant='dark'\r\n    >\r\n      <div className='center green'>\r\n        <CheckGenre\r\n          label='Action'\r\n          genreId='28'\r\n          getGenre={getGenre}\r\n        />\r\n        <CheckGenre\r\n          label='Carton'\r\n          genreId='16'\r\n          getGenre={getGenre}\r\n        />\r\n        <CheckGenre\r\n          label='Comedy'\r\n          genreId='35'\r\n          getGenre={getGenre}\r\n        />\r\n        <CheckGenre\r\n          label='Fantasy'\r\n          genreId='14'\r\n          getGenre={getGenre}\r\n        />\r\n        <CheckGenre\r\n          label='Fantastic'\r\n          genreId='878'\r\n          getGenre={getGenre}\r\n        />\r\n      </div>\r\n    </NavDropdown>\r\n  );\r\n};\r\nexport default DropdownGenre;\r\n","import { OPT } from \"../../../constants\";\r\n\r\nconst DropdownSort = ({\r\n  options,\r\n  defaultName,\r\n  value,\r\n  setKeyWordSort,\r\n}: {\r\n  options: OPT[];\r\n  defaultName: string;\r\n  value: string;\r\n  setKeyWordSort: React.Dispatch<\r\n    React.SetStateAction<string>\r\n  >;\r\n}) => {\r\n  return (\r\n    <select\r\n      name={defaultName}\r\n      id={\"selectDropdownSort\"}\r\n      onChange={(e) => {\r\n        return setKeyWordSort(e.currentTarget.value);\r\n      }}\r\n      defaultValue='0'\r\n    >\r\n      <option value='0' disabled>\r\n        {defaultName}\r\n      </option>\r\n      {options.map((obj) => {\r\n        return (\r\n          <option key={obj.val} value={obj.val}>\r\n            {obj.name}\r\n          </option>\r\n        );\r\n      })}\r\n    </select>\r\n  );\r\n};\r\nexport default DropdownSort;\r\n","import cl from \"./Loader.module.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={cl.loadText}>\r\n      Loading...\r\n      <div className={cl.loading}></div>\r\n    </div>\r\n  );\r\n};\r\nexport default Loader;\r\n","async function getFetch(url: string) {\r\n  console.log(url);\r\n\r\n  if (!url) throw new Error(\"Wrong url in request\");\r\n\r\n  const response = await fetch(url);\r\n  if (response.status === 204) {\r\n    console.log(\"response.status === 204 (No content)\");\r\n    return;\r\n  }\r\n  if (!response.ok) {\r\n    throw new Error(\r\n      `Error. Response status  fetch is: ${response.status}`\r\n    );\r\n  } else {\r\n    return await response.json();\r\n  }\r\n}\r\nexport default getFetch;\r\n","export const API_URL = \"https://api.themoviedb.org/3\";\r\nexport const BASE_IMG_URL =\r\n  \"https://image.tmdb.org/t/p/w500\";\r\nexport const API_KEY = \"29b19dec74f080a60c50986cda85b141\";\r\nexport const PATH_3 =\r\n  \"&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=true&page=1\";\r\n\r\nexport type FILM = {\r\n  id: number;\r\n  [key: string]: string | number;\r\n};\r\nexport type ARR = FILM[];\r\n\r\nexport const SORT_INIT = {\r\n  original_title: false,\r\n  release_date: false,\r\n  vote_average: false,\r\n  vote_count: false,\r\n};\r\nexport type OPT = {\r\n  [key: string]: string;\r\n};\r\nexport const OPTIONS: OPT[] = [\r\n  { val: \"original_title\", name: \"Original title\" },\r\n  { val: \"release_date\", name: \"Release date\" },\r\n  { val: \"vote_average\", name: \"Vote average\" },\r\n  { val: \"vote_count\", name: \"Vote count\" },\r\n];\r\n","import getFetch from \"./getFetch\";\r\nimport {\r\n  API_URL,\r\n  API_KEY,\r\n  PATH_3,\r\n  ARR,\r\n} from \"../constants\";\r\n\r\nconst getMovies = (\r\n  genres: string[],\r\n  setFilmsData: React.Dispatch<React.SetStateAction<ARR>>,\r\n  setIsLoading: React.Dispatch<\r\n    React.SetStateAction<boolean>\r\n  >\r\n) => {\r\n  let url = \"\";\r\n  console.log(\"getMovies fire, genres are ->\", genres);\r\n\r\n  if (genres.length) {\r\n    url = `${API_URL}/discover/movie?api_key=${API_KEY}${PATH_3}&with_genres=${genres.join()}`;\r\n\r\n    setIsLoading(true);\r\n    getFetch(url)\r\n      .then((obj) => {\r\n        console.log(\"in getMovies--->\", obj.results);\r\n        setFilmsData(obj.results);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((e) => console.log(\"ups!!!\", e));\r\n  } else {\r\n    //print: 'please choose genre'\r\n    setFilmsData([]);\r\n  }\r\n};\r\n\r\nexport default getMovies;\r\n","const handlerGenre = (\r\n  genres: string[] | [],\r\n  setGenres: React.Dispatch<React.SetStateAction<string[]>>,\r\n  valGenre: string,\r\n  checked: boolean\r\n) => {\r\n  if (checked) {\r\n    if (!genres.length) setGenres([valGenre]);\r\n    if (!genres.some((genre) => genre === valGenre)) {\r\n      setGenres([...genres, valGenre]);\r\n    }\r\n  } else if (!checked) {\r\n    setGenres(genres.filter((genre) => genre !== valGenre));\r\n  }\r\n};\r\nexport default handlerGenre;\r\n","import { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  ToggleButton,\r\n  Navbar,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport {\r\n  DropdownGenre,\r\n  DropdownSort,\r\n  Counter,\r\n} from \"../UI\";\r\nimport { getMovies } from \"../../api\";\r\nimport { OPTIONS } from \"../../constants\";\r\nimport { handlerGenre } from \"./handlers\";\r\nimport { HeadMenuProps } from \"./HeadMenu.types\";\r\nimport \"./HeadMenu.css\";\r\n\r\nconst HeadMenu = ({\r\n  setFilmsData,\r\n  keyWordSort,\r\n  setKeyWordSort,\r\n  setShowFavoriteList,\r\n  showFavoriteList,\r\n  favoriteList,\r\n  setIsLoading,\r\n}: HeadMenuProps) => {\r\n  const [genres, setGenres] = useState<string[]>([]);\r\n\r\n  return (\r\n    <Navbar\r\n      variant='dark'\r\n      bg='dark'\r\n      expand='lg'\r\n      fixed='top'\r\n    >\r\n      <Navbar.Brand>FilmsTime</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls='navbar-dark-example' />\r\n      <Navbar.Collapse id='navbar-dark-example'>\r\n        <Nav>\r\n          <Nav.Item>\r\n            <Nav.Link href='#home'>Home</Nav.Link>\r\n          </Nav.Item>\r\n          <DropdownGenre\r\n            getGenre={(\r\n              valGenre: string,\r\n              checked: boolean\r\n            ) => {\r\n              handlerGenre(\r\n                genres,\r\n                setGenres,\r\n                valGenre,\r\n                checked\r\n              );\r\n            }}\r\n          />\r\n          <Button\r\n            variant={\"primary\"}\r\n            onClick={() =>\r\n              getMovies(genres, setFilmsData, setIsLoading)\r\n            }\r\n          >\r\n            Click to load\r\n          </Button>\r\n          <DropdownSort\r\n            options={OPTIONS}\r\n            defaultName={\"Sort\"}\r\n            value={keyWordSort}\r\n            setKeyWordSort={setKeyWordSort}\r\n          />\r\n          <ToggleButton\r\n            id='toggle-check'\r\n            type='checkbox'\r\n            variant='outline-success'\r\n            checked={showFavoriteList}\r\n            value=''\r\n            onChange={(e) =>\r\n              setShowFavoriteList(e.currentTarget.checked)\r\n            }\r\n          >\r\n            My favoriteList\r\n          </ToggleButton>\r\n          <Counter favoriteList={favoriteList} />\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default HeadMenu;\r\n","import { Card, Row, Button } from \"react-bootstrap\";\r\nimport { ARR, FILM, BASE_IMG_URL } from \"../../constants\";\r\nimport c from \"./FavoriteList.module.css\";\r\n\r\nconst FavoriteList = ({\r\n  favoriteList,\r\n  setFavoriteList,\r\n}: {\r\n  favoriteList: ARR;\r\n  setFavoriteList: React.Dispatch<\r\n    React.SetStateAction<ARR>\r\n  >;\r\n}) => {\r\n  if (!favoriteList.length) {\r\n    return (\r\n      <div className={c.no_films}>\r\n        <h1>You haven't selected films.</h1>\r\n        <h4>Please ENTER My favoriteList to esc</h4>\r\n      </div>\r\n    );\r\n  }\r\n  const deleteFromList = (id: string) => {\r\n    setFavoriteList(\r\n      favoriteList.filter((f) => `${f.id}` !== id)\r\n    );\r\n  };\r\n  return (\r\n    <Row\r\n      id='home'\r\n      style={{\r\n        marginTop: \"20px\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"50px\",\r\n        backgroundColor: \"#F8FFAF\",\r\n      }}\r\n    >\r\n      {favoriteList.map((cardData: FILM) => (\r\n        <Card\r\n          style={{ width: \"20rem\" }}\r\n          bg={`success ${c.card_marg}`}\r\n          key={`MyList${cardData.id}`}\r\n        >\r\n          <Card.Img\r\n            variant='top'\r\n            src={`${BASE_IMG_URL}${cardData.poster_path}`}\r\n          />\r\n          <Card.Body>\r\n            <Card.Title>{cardData.title}</Card.Title>\r\n            <Card.Subtitle className='mb-2'>\r\n              Vote average {cardData.vote_average}\r\n            </Card.Subtitle>\r\n            <Card.Subtitle>\r\n              Counts {cardData.vote_count}\r\n            </Card.Subtitle>\r\n            <br />\r\n            <Card.Subtitle>\r\n              Release date {cardData.release_date}\r\n            </Card.Subtitle>\r\n            <br />\r\n            <Card.Text id={`cardText_${cardData.id}`}>\r\n              {cardData.overview}\r\n            </Card.Text>\r\n            <Button\r\n              className={c.card_btn_delFilm}\r\n              variant='danger'\r\n              value={cardData.id}\r\n              onClick={(e) => {\r\n                deleteFromList(e.currentTarget.value);\r\n              }}\r\n            >\r\n              Delete from favoriteList\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\nexport default FavoriteList;\r\n","import React, { useState } from \"react\";\r\nimport { Card, Button, CloseButton } from \"react-bootstrap\";\r\nimport { BASE_IMG_URL } from \"../../../../constants\";\r\nimport { FilmProps } from \"./Film.types\";\r\n\r\nimport styles from \"./Film.module.css\";\r\n\r\nconst Film = ({\r\n  film,\r\n  isInFavorites,\r\n  addToFavoriteList,\r\n  deleteFromFavoriteList,\r\n}: FilmProps) => {\r\n  const {\r\n    id,\r\n    title,\r\n    poster_path,\r\n    overview,\r\n    vote_count,\r\n    vote_average,\r\n    release_date,\r\n  } = film;\r\n\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  return (\r\n    <Card\r\n      style={{ width: \"20rem\" }}\r\n      bg={`${isInFavorites ? \"success\" : \"primary\"}`}\r\n      className={`${styles.filmCard} ${\r\n        isExpanded && styles.filmCard__expanded\r\n      }`}\r\n    >\r\n      <Card.Img\r\n        variant='top'\r\n        src={`${BASE_IMG_URL}${poster_path}`}\r\n      />\r\n      <Card.Body className={styles.cardBody}>\r\n        <Card.Title>{title}</Card.Title>\r\n        <Card.Subtitle className='mb-2'>\r\n          Vote average {vote_average}\r\n          <br />\r\n          Counts {vote_count}\r\n          <br />\r\n          Release date {release_date}\r\n          <br />\r\n        </Card.Subtitle>\r\n\r\n        {isExpanded && <Card.Text>{overview}</Card.Text>}\r\n\r\n        <div className={styles.cardButtonsRow}>\r\n          <Button\r\n            variant='dark'\r\n            onClick={() => {\r\n              setIsExpanded((prevState) => !prevState);\r\n            }}\r\n          >\r\n            {isExpanded ? \"Collapse\" : \"Expand\"}\r\n          </Button>\r\n\r\n          <Button\r\n            variant='success'\r\n            onClick={() => {\r\n              addToFavoriteList(id);\r\n            }}\r\n          >\r\n            Add to favorite\r\n          </Button>\r\n          {isInFavorites && (\r\n            <CloseButton\r\n              className={styles.card_btn_remove}\r\n              style={{ border: \"3px solid red\" }}\r\n              variant='white'\r\n              onClick={() => deleteFromFavoriteList(id)}\r\n            />\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Film;\r\n","//import { useCallback } from \"react\";\r\nimport { ARR } from \"../../../constants\";\r\n//import { useSortingProps } from \"./useSorting.types\";\r\n\r\nconst sorting = (\r\n  keyWordSort: string,\r\n  filmsList: ARR,\r\n  setFilmsList: React.Dispatch<React.SetStateAction<ARR>>\r\n) => {\r\n  if (\r\n    keyWordSort.length &&\r\n    filmsList.length &&\r\n    filmsList.every(\r\n      (obj) =>\r\n        typeof obj[keyWordSort] === \"string\" || \"number\"\r\n    )\r\n  ) {\r\n    setFilmsList(\r\n      [...filmsList].sort((a, b) => {\r\n        if (keyWordSort === \"original_title\") {\r\n          return a[keyWordSort] > b[keyWordSort] ? 1 : -1;\r\n        }\r\n        if (\r\n          keyWordSort === \"release_date\" ||\r\n          \"vote_average\" ||\r\n          \"vote_count\"\r\n        ) {\r\n          return a[keyWordSort] < b[keyWordSort] ? 1 : -1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport default sorting;\r\n","import { useCallback, useEffect } from \"react\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Film } from \"./components\";\r\nimport { FilmsListProps } from \"./FilmList.Types\";\r\nimport sorting from \"./hendlers/sorting\";\r\nimport cl from \"./FilmsList.module.css\";\r\nconst CardsFilms = ({\r\n  filmsData,\r\n  setFilmsData,\r\n  favoriteList,\r\n  setFavoriteList,\r\n  keyWordSort,\r\n  isLoading,\r\n}: FilmsListProps) => {\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      sorting(keyWordSort, filmsData, setFilmsData);\r\n      sorting(keyWordSort, favoriteList, setFavoriteList);\r\n    }\r\n  }, [keyWordSort, isLoading]);\r\n\r\n  const deleteFromFavoriteList = useCallback(\r\n    (id: number) => {\r\n      // option 1\r\n      // setFavoriteList( favoriteList.filter(\r\n      //   (o) => o.id !== id\r\n      // ));\r\n      // option 2\r\n      setFavoriteList((prevState) =>\r\n        prevState.filter((o) => o.id !== id)\r\n      );\r\n    },\r\n    [setFavoriteList]\r\n  );\r\n\r\n  const addToFavoriteList = useCallback(\r\n    (id: number) => {\r\n      const currentFilm = filmsData.filter(\r\n        (o) => o.id === id\r\n      );\r\n\r\n      if (!favoriteList.length) {\r\n        setFavoriteList(currentFilm);\r\n        //checking the same FILM\r\n      }\r\n      if (favoriteList.every((o) => o.id !== id)) {\r\n        setFavoriteList([...favoriteList, ...currentFilm]);\r\n      }\r\n    },\r\n    [filmsData, favoriteList, setFavoriteList]\r\n  );\r\n\r\n  return !filmsData.length ? (\r\n    <h3 className={cl.center}>Please, choose genres</h3>\r\n  ) : (\r\n    <Row\r\n      id='home'\r\n      style={{\r\n        justifyContent: \"center\",\r\n        marginTop: \"20px\",\r\n        paddingTop: \"50px\",\r\n        backgroundColor: \"#F8FFAF\",\r\n      }}\r\n    >\r\n      {filmsData.map((cardData) => {\r\n        const isInFavoritesArr = favoriteList.filter(\r\n          (film) => film.id === cardData.id\r\n        );\r\n        const isInFavorites = !!isInFavoritesArr.length;\r\n\r\n        return (\r\n          <Film\r\n            key={cardData.id}\r\n            film={cardData}\r\n            isInFavorites={isInFavorites}\r\n            deleteFromFavoriteList={deleteFromFavoriteList}\r\n            addToFavoriteList={addToFavoriteList}\r\n          />\r\n        );\r\n      })}\r\n    </Row>\r\n  );\r\n};\r\nexport default CardsFilms;\r\n","import { useState } from \"react\";\r\nimport { HeadMenu } from \"./HeadMenu\";\r\nimport FavoriteList from \"./FavoriteList/FavoriteList\";\r\nimport FilmsList from \"./FilmsList/FilmsList\";\r\nimport { ARR } from \"../constants\";\r\nimport { Loader } from \"./UI\";\r\n\r\nfunction App() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [keyWordSort, setKeyWordSort] =\r\n    useState<string>(\"\");\r\n  const [filmsData, setFilmsData] = useState<ARR>([]);\r\n  const [favoriteList, setFavoriteList] = useState<ARR>([]);\r\n  const [showFavoriteList, setShowFavoriteList] =\r\n    useState(false);\r\n  console.log();\r\n\r\n  return (\r\n    <>\r\n      <HeadMenu\r\n        setFilmsData={setFilmsData}\r\n        setIsLoading={setIsLoading}\r\n        keyWordSort={keyWordSort}\r\n        setKeyWordSort={setKeyWordSort}\r\n        setShowFavoriteList={setShowFavoriteList}\r\n        showFavoriteList={showFavoriteList}\r\n        favoriteList={favoriteList} //set counter\r\n      />\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : showFavoriteList ? (\r\n        <FavoriteList\r\n          favoriteList={favoriteList}\r\n          setFavoriteList={setFavoriteList}\r\n        />\r\n      ) : (\r\n        <FilmsList\r\n          filmsData={filmsData}\r\n          setFilmsData={setFilmsData}\r\n          favoriteList={favoriteList}\r\n          setFavoriteList={setFavoriteList}\r\n          keyWordSort={keyWordSort}\r\n          isLoading={isLoading}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}